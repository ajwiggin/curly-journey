{"version":3,"sources":["OneClinic.js","PastVisits.js"],"names":["OneClinic","clinicID","visits","clinicName","useState","spending","updateSpending","visit","updateVisit","useEffect","fetch","url","then","d","json","nameAmountPairs","Object","values","sort","b","amount","length","map","drName","name","key","toFixed","label","onChange","updateVisitByID","value","target","find","_id","date","Date","toLocaleDateString","PastVisits","state","Promise","all","type","res","r","allVisits","clinics","byClinic","reduce","a","v","clinic","concat","clinicsThatHaveVisits","filter","setState","this","SelectClinicModule","React","Component","setClinic","setClinicByID","chosen","c"],"mappings":"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","file":"static/js/7.cfd1b569.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { url } from './url';\nimport { MySelectField, OneVisit } from './Fields';\n\nexport const OneClinic = ({ clinicID, visits = [], clinicName }) => {\n  const [spending, updateSpending] = useState({});\n  const [visit, updateVisit] = useState({});\n\n  const updateVisitByID = ({ target: { value } }) =>\n    updateVisit(visits.find(({ _id }) => _id === value));\n\n  useEffect(() => updateVisit({}), [clinicID]);\n\n  useEffect(() => {\n    fetch(`${url}getSpendingByDoctor/${clinicID}`)\n      .then(d => d.json())\n      .then(updateSpending);\n    // .then(a => updateVisitByID(\"5ddc8639e8705d24251d60c3\"));\n  }, [clinicID]);\n  const nameAmountPairs = Object.values(spending).sort(\n    ({ amount }, b) => b.amount - amount\n  );\n\n  if (nameAmountPairs.length)\n    return (\n      <>\n        In the last year at {clinicName} you have spent these amounts. (Highest\n        is first)\n        <ol>\n          {nameAmountPairs.map(({ amount, name: drName }) => (\n            <li key={drName}>\n              {drName}: ${amount.toFixed(2)}\n            </li>\n          ))}\n        </ol>\n        <h2>Visits to {clinicName} by date </h2>\n        <MySelectField\n          label=\"Choose Visit To See Details\"\n          onChange={updateVisitByID}\n        >\n          <option value=\"0\">Choose a Date</option>\n          {visits?.map(({ date, _id }) => (\n            <option key={_id} value={_id}>\n              {new Date(date).toLocaleDateString()}\n            </option>\n          ))}\n        </MySelectField>\n        <OneVisit visit={visit} spending={spending} />\n      </>\n    );\n  if (!clinicID) return 'Choose a clinic';\n  return 'No spending found for this clinic this year';\n};\n","import React, { useState } from 'react';\nimport { url } from './url';\nimport { Wrapper, SelectClinic, Receipt } from './Fields';\nimport { OneClinic } from './OneClinic';\n\nexport default class PastVisits extends React.Component {\n  state = {};\n  componentDidMount() {\n    Promise.all(['visits', 'clinic'].map(type => fetch(url + type)))\n      .then(res => Promise.all(res.map(r => r.json())))\n      .then(([allVisits, clinics]) => {\n        const byClinic = allVisits.reduce((a, v) => {\n          const { clinic } = v;\n          a[clinic] = a[clinic] ? a[clinic].concat([v]) : [v];\n          return a;\n        }, {});\n\n        const clinicsThatHaveVisits = clinics.filter(\n          ({ _id }) => byClinic[_id]?.length\n        );\n        this.setState({\n          clinicsThatHaveVisits,\n          byClinic,\n        });\n      });\n  }\n\n  render() {\n    const { clinicsThatHaveVisits, byClinic } = this.state;\n    return (\n      <Wrapper>\n        {byClinic ? (\n          <SelectClinicModule\n            byClinic={byClinic}\n            clinics={clinicsThatHaveVisits}\n          />\n        ) : (\n          'Loading'\n        )}\n      </Wrapper>\n    );\n  }\n}\n\nconst SelectClinicModule = ({ clinics, byClinic }) => {\n  const [clinic, setClinic] = useState({});\n\n  const setClinicByID = ({ target: { value } }) => {\n    const chosen = clinics.find(c => value === c._id) || {};\n    setClinic(chosen);\n  };\n  const { _id, name } = clinic;\n  const visits = byClinic[_id];\n  return (\n    <>\n      <SelectClinic clinics={clinics} setClinic={setClinicByID} />\n      {_id && (\n        <OneClinic clinicID={_id} clinicName={name} visits={visits}></OneClinic>\n      )}\n    </>\n  );\n};\n/*\nget spending by docotr seems to fail with admin\n*/\n"],"sourceRoot":""}