{"version":3,"sources":["Validation.js","data.js","../node_modules/evergreen-ui/esm/checkbox/src/Checkbox.js","AddVisit.js"],"names":["AddVisitSchema","Yup","min","max","required","email","shape","clinic","providers","amountSpent","reason","date","LoginSchema","username","password","SignupSchema","r","ar","Math","floor","random","length","reasons","clinics","firstState","allMyClinics","submitError","CheckIcon","_ref","_ref$fill","fill","props","createElement","width","height","viewBox","fillRule","d","displayName","propTypes","string","MinusIcon","_ref2","_ref2$fill","_PureComponent","Checkbox","_getPrototypeOf2","_this","this","_len","arguments","args","Array","_key","call","apply","concat","el","indeterminate","key","value","render","_this$props","theme","id","name","label","appearance","disabled","isInvalid","checked","onChange","themedClassName","getCheckboxClassName","is","cursor","position","display","marginY","className","type","innerRef","setIndeterminate","boxSizing","borderRadius","alignItems","justifyContent","Text","marginLeft","size","color","node","bool","func","object","isRequired","withTheme","AddVisit","state","submit","values","resetForm","Number","toFixed","fetch","url","method","headers","body","JSON","stringify","receiptID","clinicName","find","_id","then","res","json","window","pglOptions","dev","forEach","console","table","alert","history","push","setState","uploadReceipt","file","data","FormData","append","ok","receiptUpload","Error","receiptSubmitted","getMyClinics","providersByClinic","validate","prefill","initialValues","materials","validationSchema","onSubmit","isSubmitting","handleReset","handleSubmit","onReset","noValidate","component","Err","as","MySelectField","map","children","capture","marginBottom","e","compress","MyTextInputField","n","inputMode","Label","MyTextarea","style","margin","Button","React","Component","See","errors","Object","entries","SelectMaterials","FormField","Pane","flexWrap","flex","SelectProvider","to"],"mappings":"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","file":"static/js/8.2b6718fc.chunk.js","sourcesContent":["import * as Yup from 'yup';\n\nconst firstName = Yup.string()\n  .min(2, 'Too Short!')\n  .max(50, 'Too Long!')\n  .required('Required');\n\nconst lastName = Yup.string()\n  .min(2, 'Too Short!')\n  .max(50, 'Too Long!')\n  .required('Required');\n\nconst email = Yup.string()\n  .email('Invalid email')\n  .required('Required');\n\nexport const AddVisitSchema = Yup.object().shape({\n  clinic: Yup.string()\n    .min(2, 'Choose a clinic')\n    .required('Required'),\n  providers: Yup.array()\n    .min(1, 'Choose at least one provider')\n    .required('Required'),\n  amountSpent: Yup.string()\n    .min(1, 'Enter Amount Spent')\n    .required('Required'),\n  reason: Yup.string()\n    .min(2, 'Choose Reason For Visit')\n    .required('Required'),\n  date: Yup.string()\n    .min(2, 'Enter Date and Time')\n    .required('Required'),\n  // materials: Yup.array().min(1, \"Choose at least one type of materials\")\n  // firstName, lastName,\n});\nexport const LoginSchema = Yup.object().shape({\n  username: Yup.string().required(),\n  password: Yup.string().required(),\n});\n\nexport const SignupSchema = Yup.object().shape({\n  email: Yup.string().required(),\n  password: Yup.string().required(),\n});\n","export const r = ar => ar[Math.floor(Math.random() * ar.length)];\nexport const reasons = [\n  'Educational Lunch',\n  'Resupply',\n  'In-Service',\n  'Issue Resolution/Tech Support',\n  'Educational Visit',\n];\nexport const clinics = [\n  'Sunshine Clinic',\n  'Best providers Office',\n  'Big Alligator providers',\n];\n\nexport const firstState = () => {\n  return {\n    allMyClinics: [],\n    submitError: null,\n  };\n};\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Box, { spacing, position, layout, dimensions } from 'ui-box';\nimport { Text } from '../../typography';\nimport { withTheme } from '../../theme';\n\nvar CheckIcon = function CheckIcon(_ref) {\n  var _ref$fill = _ref.fill,\n      fill = _ref$fill === void 0 ? 'currentColor' : _ref$fill,\n      props = _objectWithoutProperties(_ref, [\"fill\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 10,\n    height: 7,\n    viewBox: \"0 0 10 7\"\n  }, props), React.createElement(\"path\", {\n    fill: fill,\n    fillRule: \"evenodd\",\n    d: \"M4 4.586L1.707 2.293A1 1 0 1 0 .293 3.707l3 3a.997.997 0 0 0 1.414 0l5-5A1 1 0 1 0 8.293.293L4 4.586z\"\n  }));\n};\n\nCheckIcon.displayName = \"CheckIcon\";\nCheckIcon.propTypes = {\n  fill: PropTypes.string\n};\n\nvar MinusIcon = function MinusIcon(_ref2) {\n  var _ref2$fill = _ref2.fill,\n      fill = _ref2$fill === void 0 ? 'currentColor' : _ref2$fill,\n      props = _objectWithoutProperties(_ref2, [\"fill\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\"\n  }, props), React.createElement(\"path\", {\n    fill: fill,\n    fillRule: \"evenodd\",\n    d: \"M11 7H5c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1z\"\n  }));\n};\n\nMinusIcon.displayName = \"MinusIcon\";\nMinusIcon.propTypes = {\n  fill: PropTypes.string\n};\n\nvar Checkbox =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Checkbox, _PureComponent);\n\n  function Checkbox() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Checkbox);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Checkbox)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"setIndeterminate\", function (el) {\n      if (!el) return;\n      el.indeterminate = _this.props.indeterminate;\n    });\n\n    return _this;\n  }\n\n  _createClass(Checkbox, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          theme = _this$props.theme,\n          id = _this$props.id,\n          name = _this$props.name,\n          label = _this$props.label,\n          appearance = _this$props.appearance,\n          disabled = _this$props.disabled,\n          isInvalid = _this$props.isInvalid,\n          checked = _this$props.checked,\n          onChange = _this$props.onChange,\n          value = _this$props.value,\n          indeterminate = _this$props.indeterminate,\n          props = _objectWithoutProperties(_this$props, [\"theme\", \"id\", \"name\", \"label\", \"appearance\", \"disabled\", \"isInvalid\", \"checked\", \"onChange\", \"value\", \"indeterminate\"]);\n\n      var themedClassName = theme.getCheckboxClassName(appearance);\n      return React.createElement(Box, _extends({\n        is: \"label\",\n        cursor: disabled ? 'not-allowed' : 'pointer',\n        position: \"relative\",\n        display: \"flex\",\n        marginY: 16\n      }, props), React.createElement(Box, {\n        className: themedClassName,\n        is: \"input\",\n        id: id,\n        type: \"checkbox\",\n        name: name,\n        value: value,\n        checked: checked || indeterminate,\n        onChange: onChange,\n        disabled: disabled,\n        \"aria-invalid\": isInvalid,\n        innerRef: this.setIndeterminate\n      }), React.createElement(Box, {\n        boxSizing: \"border-box\",\n        borderRadius: 3,\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        width: 16,\n        height: 16\n      }, indeterminate ? React.createElement(MinusIcon, null) : React.createElement(CheckIcon, null)), label && React.createElement(Text, {\n        marginLeft: 8,\n        size: 300,\n        color: disabled ? 'muted' : 'default'\n      }, label));\n    }\n  }]);\n\n  return Checkbox;\n}(PureComponent);\n\nCheckbox.displayName = \"Checkbox\";\n\n_defineProperty(Checkbox, \"propTypes\", _objectSpread({}, spacing.propTypes, position.propTypes, layout.propTypes, dimensions.propTypes, {\n  /**\n   * The id attribute of the checkbox.\n   */\n  id: PropTypes.string,\n\n  /**\n   * The id attribute of the checkbox.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Label of the checkbox.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The value attribute of the checkbox.\n   */\n  value: PropTypes.string,\n\n  /**\n   * The checked attribute of the checkbox.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * State in addition to \"checked\" and \"unchecked\".\n   * When true, the checkbox displays a \"minus\" icon.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * Function called when state changes.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * When true, the checkbox is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * When true, the aria-invalid attribute is true.\n   * Used for accessibility.\n   */\n  isInvalid: PropTypes.bool,\n\n  /**\n   * The appearance of the checkbox.\n   * The default theme only comes with a default style.\n   */\n  appearance: PropTypes.string,\n\n  /**\n   * Theme provided by ThemeProvider.\n   */\n  theme: PropTypes.object.isRequired\n}));\n\n_defineProperty(Checkbox, \"defaultProps\", {\n  checked: false,\n  indeterminate: false,\n  onChange: function onChange() {},\n  appearance: 'default'\n});\n\nexport default withTheme(Checkbox);","import React from 'react';\nimport { Checkbox, Button, FormField, Label, Pane } from 'evergreen-ui';\nimport { url, getMyClinics } from './url';\nimport { reasons } from './data';\nimport {\n  Wrapper,\n  DevInfo,\n  Err,\n  MyTextInputField,\n  MySelectField,\n  MyTextarea,\n  compress,\n} from './Fields';\nimport { Formik, Field, ErrorMessage } from 'formik';\nimport { AddVisitSchema } from './Validation';\nimport { Link } from 'react-router-dom';\n\nexport default class AddVisit extends React.Component {\n  state = {\n    allMyClinics: [],\n    submitError: null,\n  };\n\n  componentDidMount() {\n    getMyClinics().then(allMyClinics => this.setState({ allMyClinics }));\n    fetch(url + 'getproviders')\n      .then(r => r.json())\n      .then(providersByClinic => {\n        this.setState({ providersByClinic });\n      });\n  }\n\n  submit = (values, { resetForm }) => {\n    values.amountSpent = Number(Number(values.amountSpent).toFixed(2));\n    fetch(url + 'visit', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        ...values,\n        receiptID: this.state.receiptID || '',\n        clinicName:\n          this.state.allMyClinics.find(clinic => clinic._id === values.clinic)\n            ?.name || 'name not found',\n      }),\n    })\n      .then(res => res.json())\n      .then(res => {\n        if (window.pglOptions.dev) {\n          res.email.forEach(console.table);\n        }\n        if (res && res._id) {\n          alert('Successfully Submitted');\n          this.props.history.push('pastvisits');\n        } else this.setState({ submitError: res });\n      });\n  };\n\n  uploadReceipt = file => {\n    const data = new FormData();\n    data.append('myFile', file);\n    fetch(url + 'receipt', {\n      method: 'POST',\n      body: data,\n    })\n      .then(r => {\n        if (r.ok) return r.json();\n        this.setState({\n          receiptUpload: 'Upload failed, please contact tech support',\n        });\n        throw new Error('Upload failed, please contact tech support');\n      })\n      .then(receiptID => this.setState({ receiptID, receiptSubmitted: true }));\n  };\n  render() {\n    const { providersByClinic, allMyClinics } = this.state;\n    let { validate, dev, prefill } = window.pglOptions;\n\n    return (\n      <Formik\n        initialValues={\n          prefill\n            ? {\n                clinic: '5e025ebe112a290f5bf2cd26',\n                date: '2020-11-30T12:59',\n                providers: [],\n                reason: 'Educational Lunch',\n                amountSpent: 400,\n                materials: [],\n              }\n            : {\n                clinic: '',\n                date: '',\n                providers: [],\n                reason: '0',\n                amountSpent: '',\n                materials: [],\n              }\n        }\n        validationSchema={validate && AddVisitSchema}\n        onSubmit={this.submit}\n      >\n        {({ isSubmitting, values, handleReset, handleSubmit }) => {\n          return (\n            <Wrapper>\n              <form onReset={handleReset} onSubmit={handleSubmit} noValidate>\n                <See values={values} />\n                <ErrorMessage component={Err} name={'clinic'} />\n                <Field name=\"clinic\" as={MySelectField} label=\"Choose Clinic\">\n                  {[{ _id: 0, name: 'Choose Clinic' }, ...allMyClinics].map(\n                    ({ _id, name }) => (\n                      <option key={_id} value={_id} children={name} />\n                    )\n                  )}\n                </Field>\n                <ErrorMessage component={Err} name={'providers'} />\n                <SelectProvider\n                  providersByClinic={providersByClinic}\n                  clinic={values.clinic}\n                />\n                <MyTextInputField\n                  label=\"Add Receipt\"\n                  type=\"file\"\n                  capture={true}\n                  width={250}\n                  marginBottom={32}\n                  onChange={e => compress(e, this.uploadReceipt)}\n                />\n                {this.state.receiptUpload}\n                <ErrorMessage component={Err} name={'date'} />\n                <Field\n                  name=\"date\"\n                  label=\"Date\"\n                  type=\"datetime-local\"\n                  as={MyTextInputField}\n                />\n                <ErrorMessage component={Err} name={'reason'} />\n                <Field\n                  name=\"reason\"\n                  as={MySelectField}\n                  label=\"Reason For Visit\"\n                >\n                  <option value=\"0\" key={0}>\n                    Choose a Reason\n                  </option>\n                  {reasons.map(n => (\n                    <option value={n} key={n}>\n                      {n}\n                    </option>\n                  ))}\n                </Field>\n                <SelectMaterials />\n                <ErrorMessage component={Err} name={'amountSpent'} />\n                <Field\n                  inputMode=\"numeric\"\n                  name=\"amountSpent\"\n                  as={MyTextInputField}\n                  label=\"Enter Amount Spent\"\n                />\n                <Label>\n                  Additional Notes:\n                  <Field name=\"notes\" as={MyTextarea} />\n                </Label>\n                <div style={{ display: 'flex' }}>\n                  <div style={{ margin: 'auto' }}>\n                    {dev && <button type=\"submit\">check</button>}\n                    {this.state.receiptSubmitted || !validate ? (\n                      <Button\n                        type=\"submit\"\n                        disabled={isSubmitting}\n                        children=\"Submit\"\n                        height={60}\n                      />\n                    ) : (\n                      'Please Attach A Receipt Before Submitting'\n                    )}\n                    {isSubmitting && 'Adding Visit'}\n                    {this.state.submitError && this.state.submitError}\n                  </div>\n                </div>\n              </form>\n            </Wrapper>\n          );\n        }}\n      </Formik>\n    );\n  }\n}\n\nconst See = ({ values, errors }) => (\n  <DevInfo>\n    {Object.entries(values).map(([key, value]) => (\n      <div key={key}>\n        {key} value is {value || 'empty'}\n      </div>\n    ))}\n  </DevInfo>\n);\n\nconst SelectMaterials = () => (\n  <FormField label=\"Choose Materials\">\n    <ErrorMessage component={Err} name={'materials'} />\n    <Pane\n      style={{\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n      }}\n    >\n      {['1', '2', '3', '4', '5'].map(n => (\n        <Field\n          style={{ flex: '1 0 33%' }}\n          key={n}\n          label={`Material ${n}`}\n          as={Checkbox}\n          type=\"checkbox\"\n          name=\"materials\"\n          value={n}\n        />\n      ))}\n    </Pane>\n  </FormField>\n);\n\nconst SelectProvider = ({ providersByClinic, clinic, ...rest }) => {\n  if (!clinic) return 'Please Select A Clinic';\n  const providers = providersByClinic && providersByClinic[clinic];\n  if (providers && providers.length) {\n    return (\n      <FormField label=\"Providers Present At Meeting\">\n        {providersByClinic[clinic].map(({ _id, name }) => (\n          <Field\n            key={_id}\n            label={name}\n            as={Checkbox}\n            type=\"checkbox\"\n            name=\"providers\"\n            value={_id}\n          />\n        ))}\n      </FormField>\n    );\n  } else {\n    return (\n      <>\n        This Clinic Has No Providers, Please Add One{' '}\n        <Link to=\"/addProvider\">Here</Link>\n      </>\n    );\n  }\n};\n"],"sourceRoot":""}