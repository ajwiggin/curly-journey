{"version":3,"sources":["Validation.js","Signup.js"],"names":["AddVisitSchema","Yup","min","max","required","email","shape","clinic","providers","amountSpent","reason","date","LoginSchema","username","password","SignupSchema","Signup","display","alignItems","justifyContent","height","width","border","src","logo","alt","onSubmit","submit","values","newUser","fetch","url","method","body","JSON","stringify","headers","validationSchema","isSubmitting","component","Err","name","as","MyTextInputField","label","type","disabled","children"],"mappings":"kIAAA,4JAgBaA,GAdKC,WACfC,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YAEKH,WACdC,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YAEEH,WACXI,MAAM,iBACND,SAAS,YAEkBH,WAAaK,MAAM,CAC/CC,OAAQN,WACLC,IAAI,EAAG,mBACPE,SAAS,YACZI,UAAWP,UACRC,IAAI,EAAG,gCACPE,SAAS,YACZK,YAAaR,WACVC,IAAI,EAAG,sBACPE,SAAS,YACZM,OAAQT,WACLC,IAAI,EAAG,2BACPE,SAAS,YACZO,KAAMV,WACHC,IAAI,EAAG,uBACPE,SAAS,eAIDQ,EAAcX,WAAaK,MAAM,CAC5CO,SAAUZ,WAAaG,WACvBU,SAAUb,WAAaG,aAGZW,EAAed,WAAaK,MAAM,CAC7CD,MAAOJ,WAAaG,WACpBU,SAAUb,WAAaG,c,gCC1CzB,qGAmDeY,UAxCA,SAATA,SAUJ,OACE,kBAAC,IAAD,CACEC,QAAQ,OACRC,WAAW,SACXC,eAAe,SACfC,OAAO,QAEP,kBAAC,IAAD,CAAMC,MAAM,OAAOC,OAAO,WACxB,yBAAKC,IAAKC,IAAMJ,OAAO,OAAOK,IAAI,aAClC,kBAAC,IAAD,CAAQC,SAlBC,SAATC,OAASC,GACbA,EAAOC,SAAU,EACjBC,MAAM,GAAD,OAAIC,MAAJ,SAAgB,CACnBC,OAAQ,OACRC,KAAMC,KAAKC,UAAUP,GACrBQ,QAAS,CAAE,eAAgB,uBAaCC,iBAAkBtB,iBACzC,gBAAGuB,EAAH,EAAGA,aAAH,OACC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAcC,UAAWC,MAAKC,KAAK,aACnC,kBAAC,IAAD,CAAOC,GAAIC,mBAAkBF,KAAK,QAAQG,MAAM,aAChD,kBAAC,IAAD,CAAcL,UAAWC,MAAKC,KAAK,aACnC,kBAAC,IAAD,CAAOC,GAAIC,mBAAkBF,KAAK,WAAWG,MAAM,aACnD,kBAAC,IAAD,CACEF,GAAIC,mBACJF,KAAK,YACLG,MAAM,qBAER,kBAAC,IAAD,CAAQC,KAAK,SAASC,SAAUR,EAAcS,SAAS","file":"static/js/8.2dd1c074.chunk.js","sourcesContent":["import * as Yup from 'yup';\n\nconst firstName = Yup.string()\n  .min(2, 'Too Short!')\n  .max(50, 'Too Long!')\n  .required('Required');\n\nconst lastName = Yup.string()\n  .min(2, 'Too Short!')\n  .max(50, 'Too Long!')\n  .required('Required');\n\nconst email = Yup.string()\n  .email('Invalid email')\n  .required('Required');\n\nexport const AddVisitSchema = Yup.object().shape({\n  clinic: Yup.string()\n    .min(2, 'Choose a clinic')\n    .required('Required'),\n  providers: Yup.array()\n    .min(1, 'Choose at least one provider')\n    .required('Required'),\n  amountSpent: Yup.string()\n    .min(1, 'Enter Amount Spent')\n    .required('Required'),\n  reason: Yup.string()\n    .min(2, 'Choose Reason For Visit')\n    .required('Required'),\n  date: Yup.string()\n    .min(2, 'Enter Date and Time')\n    .required('Required'),\n  // materials: Yup.array().min(1, \"Choose at least one type of materials\")\n  // firstName, lastName,\n});\nexport const LoginSchema = Yup.object().shape({\n  username: Yup.string().required(),\n  password: Yup.string().required(),\n});\n\nexport const SignupSchema = Yup.object().shape({\n  email: Yup.string().required(),\n  password: Yup.string().required(),\n});\n","import React from 'react';\nimport { Button, Pane } from 'evergreen-ui';\nimport './App.css';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { url } from './url';\nimport { Err, MyTextInputField } from './Fields';\nimport { LoginSchema, SignupSchema } from './Validation';\nimport logo from './image/pnglogo.png';\n\nconst dev = process.env.NODE_ENV === 'development';\n\nconst Signup = () => {\n  const submit = values => {\n    values.newUser = true;\n    fetch(`${url}login`, {\n      method: 'POST',\n      body: JSON.stringify(values),\n      headers: { 'Content-Type': 'application/json' },\n    });\n  };\n\n  return (\n    <Pane\n      display=\"flex\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      height=\"70vh\"\n    >\n      <Pane width=\"90vw\" border=\"default\">\n        <img src={logo} height=\"47px\" alt=\"pgl logo\" />\n        <Formik onSubmit={submit} validationSchema={SignupSchema}>\n          {({ isSubmitting }) => (\n            <Form>\n              <ErrorMessage component={Err} name=\"username\" />\n              <Field as={MyTextInputField} name=\"email\" label=\"Username\" />\n              <ErrorMessage component={Err} name=\"password\" />\n              <Field as={MyTextInputField} name=\"password\" label=\"Password\" />\n              <Field\n                as={MyTextInputField}\n                name=\"password2\"\n                label=\"Password Confirm\"\n              />\n              <Button type=\"submit\" disabled={isSubmitting} children=\"Submit\" />\n            </Form>\n          )}\n        </Formik>\n      </Pane>\n    </Pane>\n  );\n};\n\nexport default Signup;\n"],"sourceRoot":""}